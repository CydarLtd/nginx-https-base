user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

    client_max_body_size 4000M;


    # don't leak nginx version, it might be vulnerable and found in a scan.
	server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

    # https://cipherli.st/
    ssl_prefer_server_ciphers on;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver_timeout 5s;
    add_header X-Frame-Options "DENY";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    ssl_dhparam dhparams.pem;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

    # disable due to BREACH attack :-(
	#gzip on;
    gzip off;
	gzip_disable "msie6";


	##
	# Virtual Host Configs
	##

    # Only HTTPS, with the exception of the let's encrypt HTTP challenge. The
    # webroot challenge happens online with no downtime and is handled by the
    # playbook+cronjob
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        location /.well-known {
            alias /var/www/letsencrypt/.well-known;
        }
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # see proxy_params for websocket proxying
    # configuration advice from https://nginx.org/en/docs/http/websocket.html
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}

# NOTE sudo htpasswd -c /etc/nginx/htpasswd naggie # apache2-utils or ansible htpasswd module
