- name: trust nginx apt server
  become: yes
  apt_key:
    data: "{{ lookup('file', 'nginx_signing.key') }}"
    state: present

- name: add nginx apt-sources for mainline
  become: yes
  apt_repository:
    repo: deb http://nginx.org/packages/mainline/ubuntu/ xenial nginx
    state: present
    filename: nginx

- name: install nginx + letsencrypt
  apt:
    name: "{{item}}"
    state: latest
    update_cache: yes
  become: yes
  with_items:
    - nginx
    - letsencrypt
    - openssl

# https://weakdh.org/sysadmin.html
- name: Generate secure dhparams
  command:
    cmd: openssl dhparam -out /etc/nginx/dhparams.pem 2048
    creates:
      /etc/nginx/dhparams.pem
  become: true
  notify:
    - reload nginx

- name: Copy nginx config files for HTTP challenge + SSL settings
  copy:
    src: "{{item}}"
    dest: /etc/nginx/
  with_items:
    - nginx.conf
    - server_defaults
    - proxy_params
    - uwsgi_params
  become: yes
  notify:
    - reload nginx

- name: Remove default http nginx vhost
  become: yes
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify:
    - reload nginx

- name: make error_pages directory
  become: yes
  file:
    path: /var/www/error_pages/
    state: directory
    owner: www-data
    group: www-data

- name: Ensure ssl-cert group exists
  group:
    name: ssl-cert
    state: present
  become: yes

- name: create letsencrypt user
  user:
    name: letsencrypt
    shell: /bin/nologin
    group: ssl-cert
    append: yes
  become: yes

- name: make HTTP challenge directory
  become: yes
  file:
    path: /var/www/letsencrypt/.well-known
    state: directory
    owner: letsencrypt
    group: www-data

- name: ensure letsencrypt directories exist and are owned by letsencrypt
  become: yes
  file:
    path: "{{item}}"
    state: directory
    owner: letsencrypt
    group: ssl-cert
  with_items:
    - /etc/letsencrypt/
    - /var/log/letsencrypt/
    - /var/lib/letsencrypt/

# not using native ansible is probably faster
- name: Migrate old root-owned directories
  command:
    cmd: chown -R letsencrypt:ssl-cert {{item}}
  with_items:
    - /etc/letsencrypt/
    - /var/log/letsencrypt/
    - /var/lib/letsencrypt/
  become: true

- name: Copy HTML error pages if they're not already there
  # override them if you like, with a role that uses this role.
  copy:
    src: "error_pages/{{item}}"
    dest: /var/www/error_pages/
    owner: www-data
    group: www-data
    force: no
  with_items:
    - error.html
    - offline.html
    - denied.html
    - notfound.html
    - ratelimit.html
  become: yes
  notify:
    - reload nginx

# nginx needs to be restarted if changed before letsencrypt challenge! -- but only if handler would have run otherwise
- meta: flush_handlers

- name: Initialise domains + grab initial certs
  command:
    cmd: letsencrypt certonly -n --agree-tos --webroot --webroot-path /var/www/letsencrypt --email {{admin_email}} -d {{item.domain}}
    creates:
      /etc/letsencrypt/live/{{item.domain}}/fullchain.pem
  with_items: "{{sites}}"
  become: true
  become_user: letsencrypt

- name: Add cron job to auto renew
  cron:
    name: Renew certificates
    minute: 21
    hour: 3
    job: letsencrypt renew -n
    user: letsencrypt
  become: true

- name: Add cron job to auto reload certificates
  cron:
    name: Reload nginx
    minute: 31
    hour: 3
    job: /bin/systemctl reload nginx
    user: root
  become: true

- name: Create nginx sites
  template:
    src: "{{item.template}}"
    dest: /etc/nginx/sites-enabled/{{item.domain}}.conf
  become: yes
  with_items: "{{sites}}"
  notify:
    - reload nginx
    - no really, reload nginx

