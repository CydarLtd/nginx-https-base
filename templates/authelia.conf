server {
    server_name {{item.domain}};

    ssl_certificate     /etc/letsencrypt/live/{{item.domain}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{item.domain}}/privkey.pem;

    include server_defaults;


    location / {
        proxy_pass {{item.target}};

        # set to $proxy_params if server requires given hostname
        proxy_set_header Host {{item.Host|default("$host")}};

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Transparent automatic websocket upgrade
        # relies on map statement in nginx.conf
        # see https://nginx.org/en/docs/http/websocket.html
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_redirect $proxy_host https://$server_name/;

        auth_request /auth_verify;
        auth_request_set $redirect $upstream_http_redirect;
        auth_request_set $user $upstream_http_remote_user;
        auth_request_set $groups $upstream_http_remote_groups;
        proxy_set_header X-Forwarded-User $user;
        proxy_set_header Remote-Groups $groups;

        error_page 401 =302 {{authelia_external_url}}?rd=$redirect;
        error_page 403 = {{authelia_external_url}}error/403;

        location /auth_verify {
            internal;
            proxy_set_header Host $http_host;

            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";

            proxy_pass {{authelia_internal_url}}api/verify;
        }

        {{item.location_extra|default('')|indent(8)}}
    }
}
